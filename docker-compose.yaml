#version: '3'
services:
  ollama:
    image: ollama/ollama:latest
    networks:
      - llama-net
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    environment:
      - ENV=production
    entrypoint: /bin/bash -c "apt update -y && apt install curl -y && ollama start"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  open-webui:
    image: ghcr.io/open-webui/open-webui:latest

    #ports:
    #  - "5000:8080"  # no need since we use nginx to publish the solution
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    volumes:
      - open-webui:/app/backend/data
    networks:
      - llama-net
    depends_on:
      - ollama
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - AUTOMATIC1111_BASE_URL=http://automatic1111:7860/
      - ENABLE_IMAGE_GENERATION=True
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
  automatic1111:
    #image: automatic1111
    build: 
      context: .
      dockerfile: automatic1111.dockerfile
    #ports:
      # - "7860:7860" # it will be called back to back :) 
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]    
    environment:
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      - automatic1111-data:/app/models
    networks:
      - llama-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always
    depends_on:
      - open-webui

  nginx:
    image: nginx:latest
    env_file:
      - .env
    extra_hosts:
      - "$SERVER_NAME:127.0.0.1"
    entrypoint: ["/docker-entrypoint.sh"]
    command: ["sh", "-c", "openssl req -x509 -newkey rsa:4096 -keyout /etc/nginx/cert/key.pem -out /etc/nginx/cert/cert.pem -sha256 -days $Days -nodes -subj \"/C=$C/ST=$ST/L=$L/O=$O/OU=$OU/CN=$CN\" && chmod 644 /etc/nginx/cert/cert.pem && chmod 640 /etc/nginx/cert/key.pem && nginx -g 'daemon off;'"]
    volumes:
      - nginx-ssl:/etc/nginx/cert
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    healthcheck:
      test: ["CMD", "curl", "-vIk", "--http2", "-A Healthcheck" , "https://$SERVER_NAME"]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - open-webui
    networks:
      - llama-net

volumes:
  nginx-ssl:
  automatic1111-data:
  open-webui:
networks:
  llama-net:
    driver: bridge
    enable_ipv6: false